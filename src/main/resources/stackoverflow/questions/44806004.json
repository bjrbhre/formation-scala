{
  "question_id" : 44806004,
  "title" : "Populating TableView from Sqlite DB throws a NullPointerException",
  "body" : "<p>I want to plot data i got from measuring the temperature. The data is stored in a Sqlite database.</p>\n\n<p>The problem I now have is that I somehow can't add the data from the database to the TableView. It throws a NullPointerException but I'm unable to find out why. The most other topics about similar problems didn't help me, they also mostly work with FXML which I'm not using.</p>\n\n<p>Here is the exception message:</p>\n\n<pre><code>java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:367)\n    at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:305)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)\nCaused by: java.lang.NullPointerException\n    at ReadData.selectAll(ReadData.java:35)\n    at main.main(main.java:19)\n    ... 11 more\nException running application main\n</code></pre>\n\n<p>Here is my main class:</p>\n\n<pre><code>import javafx.application.Application;\nimport javafx.scene.Scene;\nimport javafx.stage.Stage;\n\npublic class main extends Application {\n\n    @Override\n    public void start(Stage mainStage) throws Exception {\n        mainStage.setScene(new Scene(new TempViewerWindow()));\n        mainStage.setMinWidth(300);\n        mainStage.setMinHeight(300);\n        mainStage.setTitle(\"Temperature Viewer\");     \n        mainStage.show();\n    }\n\n    public static void main(String[] args) {\n\n        ReadData controller = new ReadData();\n        controller.selectAll();\n\n        launch(args);\n    }\n\n}\n</code></pre>\n\n<p>Here is my View class:</p>\n\n<pre><code>import javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.scene.canvas.Canvas;\nimport javafx.scene.control.TableColumn;\nimport javafx.scene.control.TableView;\nimport javafx.scene.layout.BorderPane;\nimport javafx.scene.layout.StackPane;\n\npublic class TempViewerWindow extends BorderPane{\n\n    ObservableList&lt;TempData&gt; allData = FXCollections.observableArrayList();\n    TableView&lt;TempData&gt; tableView = new TableView&lt;&gt;();\n\n    public TempViewerWindow(){\n\n        TableColumn&lt;TempData, String&gt; col_date = new TableColumn&lt;&gt;(\"Date\");\n        TableColumn&lt;TempData, Double&gt; col_temperature = new TableColumn&lt;&gt;(\"Temperature\");\n\n        col_date.setCellValueFactory(e -&gt; e.getValue().dateProperty());\n        col_temperature.setCellValueFactory(e -&gt; e.getValue().temperatureProperty().asObject());\n\n        tableView.setItems(allData);\n\n        tableView.getColumns().addAll(col_date, col_temperature);\n\n        setLeft(tableView);\n\n        StackPane holder = new StackPane();\n        Canvas canvas = new Canvas(300,250);\n\n        holder.getChildren().add(canvas);\n        holder.setStyle(\"-fx-background-color: white\");\n\n        setRight(holder);\n\n\n    }\n\n//    public ObservableList&lt;TempData&gt; addToTableView(TempData data){\n//        ObservableList&lt;TempData&gt; allData = FXCollections.observableArrayList();\n//        allData.add(data);\n//        \n//        return allData;\n//    }\n\n    public void fillTableView(TempData data){\n        allData.add(data);\n    }\n\n\n}\n</code></pre>\n\n<p>Here is my Model class:</p>\n\n<pre><code>import javafx.beans.property.*;\n\npublic class TempData {\n\n    SimpleStringProperty date;\n    SimpleDoubleProperty temperature;\n\n    TempData(String name, Double temperature){\n        this.date = new SimpleStringProperty();\n        this.temperature = new SimpleDoubleProperty();\n    }\n\n    public StringProperty dateProperty(){\n        return date;\n    }\n\n    public String getDate(){\n        return date.get();\n    }\n\n    public void setDate(String date){\n        this.date.set(date);\n    }\n\n    public DoubleProperty temperatureProperty(){\n        return temperature;\n    }\n\n    public double getTemperature(){\n        return temperature.get();\n    }\n\n    public void setTemperature(Double temperature){\n        this.temperature.set(temperature);\n    }\n\n\n}\n</code></pre>\n\n<p>and finally my controller:</p>\n\n<pre><code>import java.sql.DriverManager;\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\npublic class ReadData {\n\n    private TempViewerWindow view;\n\n    private Connection connect() {\n        // SQLite connection string\n        String url = \"jdbc:sqlite:F://python27_workspace/TempSensor/temperature.db\";\n        Connection conn = null;\n        try {\n            conn = DriverManager.getConnection(url);\n        } catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }\n        return conn;\n    }\n\n    public void selectAll(){\n        String sql = \"SELECT Id, Temperature FROM data\";\n\n        try (Connection conn = this.connect();\n             Statement stmt  = conn.createStatement();\n             ResultSet rs    = stmt.executeQuery(sql)){\n\n            // loop through the result set\n            while (rs.next()) {               \n\n                TempData data = new TempData(rs.getString(\"Id\"), rs.getDouble(\"Temperature\"));\n                //view.addToTableView(data);\n                view.fillTableView(data);\n\n                System.out.println(rs.getString(\"Id\") +  \"\\t\" + \n                                   rs.getDouble(\"Temperature\"));\n            }\n        } catch (SQLException e) {\n            System.out.println(e.getMessage());\n        }\n    }\n\n\n}\n</code></pre>\n\n<p>When I make an app with only the controller code and let it print out the data to the console, it works properly.</p>\n",
  "link" : "https://stackoverflow.com/questions/44806004/populating-tableview-from-sqlite-db-throws-a-nullpointerexception",
  "owner" : {
    "user_id" : 8226733,
    "user_type" : "registered",
    "display_name" : "TheQuestioner",
    "profile_image" : "https://www.gravatar.com/avatar/2c06624ee57525ab76ddbd1f0b1a297b?s=128&d=identicon&r=PG&f=1",
    "link" : "https://stackoverflow.com/users/8226733/thequestioner",
    "reputation" : 1,
    "accept_rate" : null
  },
  "is_answered" : false,
  "creation_date" : 1498661675,
  "last_activity_date" : 1498661675,
  "tags" : [
    "java",
    "sqlite"
  ],
  "score" : 0,
  "view_count" : 6,
  "answer_count" : 0
}