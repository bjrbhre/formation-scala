{
  "question_id" : 44806066,
  "title" : "I2C bizarre delay issue when reading",
  "body" : "<p>I've been trying to get my ATTINY85 to bit-bang I2C (read/write). I have the following configuration:</p>\n\n<pre><code>PB0 = SDA\nPB1 = LED\nPB2 = SCL\n</code></pre>\n\n<p>I'm able to write without any problems, but reading only works if I have my 'delay()' function inside the read loop, so far so good:</p>\n\n<pre><code>char i2c_read(void)\n{\n    uint8_t B = 0;\n    DDRB &amp;= 0b11111110; // switch PB0 to input\n\n    for ( int bit = 0; bit &lt; 0x08; bit++ )\n    {        \n        delay(); // &lt;--!!!!!!!!! the root of all evil\n\n        SIGNAL_HIGH( PORT_SCL );\n\n        B &lt;&lt;= 1;\n\n        if( PINB &amp; (1 &lt;&lt; PB0 ) )\n        {\n            B |= 1;              \n        } \n        else\n        {\n            B |= 0;              \n        }\n\n        SIGNAL_LOW( PORT_SCL );\n    }\n\n    DDRB |= 0b00000001; // switch PB0 as output\n\n    i2c_nack();\n\n    return B;\n}\n</code></pre>\n\n<p>If I remove the delay(), I2C no longer works and I cannot read from the device (device doesn't respond).</p>\n\n<p>The _delay_ms was too slow, so I just turned pin on and off in order to make a tiny delay. Here are the contents of my delay function, everything works great if I leave it like this:</p>\n\n<pre><code>void delay()\n{\n    LED_ON();\n    LED_OFF();\n}\n\nvoid LED_ON( void )\n{\n    PORTB |= 0b00000010; // PB1\n}\n\nvoid LED_OFF( void )\n{\n    PORTB &amp;= 0b11111101; // PB1\n}\n</code></pre>\n\n<p>I suspected that I probably 'nailed' a perfect delay and that's why it works, so I tried to make the same delay using the for loop and oscilloscope:</p>\n\n<pre><code>void delay()\n{\n   for( int i=0; i&lt;20; i++){ }\n}\n</code></pre>\n\n<p>No luck, I2C reading stops working..</p>\n\n<p>Then I decided to switch the LED to another PIN and leave the PB1 completely alone to see if it's delay related or pin/circuit related:</p>\n\n<pre><code>void delay()\n{\n    LED_ON();\n    LED_OFF();\n}\n\nvoid LED_ON( void )\n{\n    PORTB |= 0b00001000; // PB3\n}\n\n\nvoid LED_OFF( void )\n{\n    PORTB &amp;= 0b11110111; // PB3\n}\n</code></pre>\n\n<p>And strangely I2C stopped working as well! I still can't understand if I just happened to nail the perfect delay required and it just happens to be that turning PB1 on takes less time than turning the PB3 or it has something do with the circuit itself and LED doing some kind of pull-up/pull-down functionality on the I2C (forgive my ignorance, I'm a beginner).</p>\n\n<p>Can anyone please shed some light on why is it only working when I turn on PB1 on/off, instead of doing a real delay? Thanks!</p>\n\n<p>The full source:</p>\n\n<pre><code>#define PORT_SDA PB0\n#define PORT_SCL PB2\n\n#define SIGNAL_HIGH(PORT) PORTB |=  ( 1 &lt;&lt; PORT )\n#define SIGNAL_LOW(PORT)  PORTB &amp;= ~( 1 &lt;&lt; PORT )\n\nvoid delay();\nvoid LED_ON(void);\nvoid LED_OFF(void);\n\nvoid i2c_init(void);\nvoid i2c_start(void);\nchar i2c_read(void);\nvoid i2c_stop(void);\nvoid i2c_nack(void);\nvoid i2c_ack(void);\nvoid i2c_ack_slave(void);\nvoid i2c_write(uint8_t byte);\n\nvoid i2c_init()\n{\n    DDRB = 0b00000010; // TODO: should be removed once the weird delay issue is solved\n    DDRB |= ( 1 &lt;&lt; PORT_SDA );\n    DDRB |= ( 1 &lt;&lt; PORT_SCL );\n}\n\nvoid i2c_start( void )\n{\n    SIGNAL_LOW(  PORT_SCL );\n    SIGNAL_HIGH( PORT_SDA );\n    SIGNAL_HIGH( PORT_SCL );\n    SIGNAL_LOW(  PORT_SDA );\n    SIGNAL_LOW(  PORT_SCL );\n}\n\nvoid i2c_stop( void )\n{\n    SIGNAL_LOW(  PORT_SCL );\n    SIGNAL_LOW(  PORT_SDA );\n    SIGNAL_HIGH( PORT_SCL );\n    SIGNAL_HIGH( PORT_SDA );\n}\n\nvoid i2c_ack(void)\n{\n   SIGNAL_LOW(  PORT_SDA );\n   SIGNAL_HIGH( PORT_SCL );\n   SIGNAL_LOW(  PORT_SCL );\n   SIGNAL_HIGH( PORT_SDA );\n}\n\nvoid i2c_nack(void)\n{\n   SIGNAL_HIGH( PORT_SDA );\n   SIGNAL_HIGH( PORT_SCL );\n   SIGNAL_LOW(  PORT_SCL );\n}\n\nvoid i2c_ack_slave(void)\n{\n    SIGNAL_HIGH( PORT_SCL );\n    SIGNAL_LOW( PORT_SCL );\n}\n\nvoid i2c_write(uint8_t byte)\n{\n    uint8_t bit;\n\n    for ( bit = 0; bit &lt; 0x08; bit++ )\n    {\n        if( ( byte &lt;&lt; bit ) &amp; 0x80 )\n            SIGNAL_HIGH( PORT_SDA );\n        else\n            SIGNAL_LOW( PORT_SDA );\n\n        SIGNAL_HIGH( PORT_SCL );\n        SIGNAL_LOW( PORT_SCL );\n    }\n\n    // Clear both lines (needed?)\n    SIGNAL_LOW( PORT_SCL );\n    SIGNAL_LOW( PORT_SDA );\n\n    i2c_ack();\n}\n\nchar i2c_read(void)\n{\n    uint8_t B = 0;\n    DDRB &amp;= 0b11111110; // switch PB0 to input\n\n    for ( int bit = 0; bit &lt; 0x08; bit++ )\n    {        \n        delay(); // &lt;-- the root of all evil\n\n        SIGNAL_HIGH( PORT_SCL );\n\n        B &lt;&lt;= 1;\n\n        if( PINB &amp; (1 &lt;&lt; PB0 ) )\n        {\n            B |= 1;              \n        } \n        else\n        {\n            B |= 0;              \n        }\n\n        SIGNAL_LOW( PORT_SCL );\n    }\n\n    DDRB |= 0b00000001; // switch PB0 as output\n\n    i2c_nack();\n\n    return B;\n}\n\n\nvoid delay()\n{\n    LED_ON();\n    LED_OFF();\n}\n\n\nvoid LED_ON( void )\n{\n    PORTB |= 0b00000010;\n}\n\n\nvoid LED_OFF( void )\n{\n    PORTB &amp;= 0b11111101;\n}\n</code></pre>\n",
  "link" : "https://stackoverflow.com/questions/44806066/i2c-bizarre-delay-issue-when-reading",
  "owner" : {
    "user_id" : 8166291,
    "user_type" : "registered",
    "display_name" : "Kristian",
    "profile_image" : "https://www.gravatar.com/avatar/7b8655760bd9e23243742766923c161f?s=128&d=identicon&r=PG&f=1",
    "link" : "https://stackoverflow.com/users/8166291/kristian",
    "reputation" : 18,
    "accept_rate" : null
  },
  "is_answered" : false,
  "creation_date" : 1498661799,
  "last_activity_date" : 1498661799,
  "tags" : [
    "c",
    "avr",
    "i2c"
  ],
  "score" : 0,
  "view_count" : 7,
  "answer_count" : 0
}