{
  "question_id" : 44806048,
  "title" : "R mclapply vs foreach",
  "body" : "<p>I use mclapply for all my \"embarassingly parallel\" computations.  I find it clean and easy to use, and when arguments <code>mc.cores = 1</code> and <code>mc.preschedule = TRUE</code> I can insert <code>browser()</code> in the function inside <code>mclapply</code> and debug line by line just like in regular R.  This is a huge help in getting code to production quicker.</p>\n\n<p><em>What does <code>foreach</code> offer that <code>mclapply</code> does not?  Is there a reason I should consider writing foreach code going forward?</em>  </p>\n\n<p>If I understand correctly, both can use the <code>multicore</code> approach to parallel computations (permitting forking) which I like to use for performance reasons.</p>\n\n<p>I have seen <code>foreach</code> being used in various packages, and have read the basics of it, but frankly I don't find it as easy to use.  I also am unable to figure out how to get the <code>browser()</code> to work in <code>foreach</code> function calls.  (yes I have read this thread <a href=\"https://stackoverflow.com/questions/9483269/browser-mode-with-foreach-dopar\">browser mode with foreach %dopar%</a> but didn't help me to get the browser to work right).</p>\n",
  "link" : "https://stackoverflow.com/questions/44806048/r-mclapply-vs-foreach",
  "owner" : {
    "user_id" : 7613376,
    "user_type" : "registered",
    "display_name" : "Quantitative Melancholy",
    "profile_image" : "https://www.gravatar.com/avatar/76d9fef3369ebcc65d669e22a8603d8c?s=128&d=identicon&r=PG&f=1",
    "link" : "https://stackoverflow.com/users/7613376/quantitative-melancholy",
    "reputation" : 136,
    "accept_rate" : 100
  },
  "is_answered" : false,
  "creation_date" : 1498661749,
  "last_activity_date" : 1498661749,
  "tags" : [
    "r",
    "foreach",
    "mclapply"
  ],
  "score" : 0,
  "view_count" : 5,
  "answer_count" : 0
}