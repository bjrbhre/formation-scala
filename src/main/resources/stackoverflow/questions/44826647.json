{
  "question_id" : 44826647,
  "title" : "Angular2 Authguard for user login",
  "body" : "<p>So I have the backend setup such that if I POST login, then it starts a session and if I POST logout, it ends that session.\nI want to write Angular2 auth guard such that it keeps track of if the user is logged in or not.</p>\n\n<p>//login.component.ts</p>\n\n<pre><code>export class LoginComponent implements OnInit {\n    questions: any[]; \n    error_message: string = 'Login Unsuccessful'\n\n  constructor(public router: Router, \n    private authenticationService: AuthenticationService, \n    question_service: LoginQuestionService) {\n\n    this.questions = question_service.getQuestions(); \n    this.authenticationService.logged_in.subscribe((value) =&gt; {\n      console.log(\"Login Status: \" + value);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  formSubmitted(data): void {\n    this.login(data.username, data.password);\n  }\n\n\n  login(username, password) {\n    event.preventDefault();\n    this.authenticationService.login(username, password)\n    .subscribe(\n      response =&gt; {\n        this.authenticationService.logged_in.next(true);\n        this.router.navigate(['home']);\n      },\n      error =&gt; {\n        this.authenticationService.logged_in.next(false);\n        alert(this.error_message);\n        this.router.navigate(['login']);\n        console.log(error);\n      }\n      );\n  };\n</code></pre>\n\n<p>//authenticationservice.ts</p>\n\n<pre><code>@Injectable()\nexport class AuthenticationService {    \n    private base_url: string;\n    public logged_in: Subject&lt;boolean&gt; = new Subject();\n     \n    constructor(private http: Http) {\n        this.base_url = 'http://localhost:3000/';\n    }\n\n    login(username: string, password: string): Observable&lt;Response&gt; {\n        let query_url = `${this.base_url}login`;\n        let payload = JSON.stringify({username: username, password: password});\n        return this.http.post(query_url, payload)\n        .map(res =&gt; res.json())\n        .catch((error:any) =&gt; Observable.throw(error.json()));\n    }\n\n    logout(): Observable&lt;Response&gt;{\n        let query_url = `${this.base_url}logout`;\n        return this.http.post(query_url, null);\n    }\n}\n</code></pre>\n\n<p>How would go about writing an auth guard that keeps track of the variable in the service?\nWhat is the best way to keep track of login? I know in AngularJS, there is $rootscope variable but not in Angular2</p>\n",
  "link" : "https://stackoverflow.com/questions/44826647/angular2-authguard-for-user-login",
  "owner" : {
    "user_id" : 6475720,
    "user_type" : "registered",
    "display_name" : "PowerLove",
    "profile_image" : "https://www.gravatar.com/avatar/15b0b7b4e07230784f5530f655c769b5?s=128&d=identicon&r=PG&f=1",
    "link" : "https://stackoverflow.com/users/6475720/powerlove",
    "reputation" : 29,
    "accept_rate" : 50
  },
  "is_answered" : false,
  "creation_date" : 1498743271,
  "last_activity_date" : 1498743503,
  "tags" : [
    "angular",
    "angular2-routing",
    "angular2-services",
    "angular2-directives"
  ],
  "score" : 0,
  "view_count" : 5,
  "answer_count" : 1
}