{
  "question_id" : 44826458,
  "title" : "GridSearch in Keras + TensorFlow resulting in Resource exhausted",
  "body" : "<p>I know that this error is recurrent and I understand what can cause it.\nFor example, running this model with 163 images of 150x150 gives me the error (however it's not clear to me why setting batch_size Keras still seems to try to allocate all images at a time in the GPU):</p>\n\n<pre><code>model = Sequential()\n    model.add(Conv2D(64, kernel_size=(6, 6), activation='relu', input_shape=input_shape, padding='same', name='b1_conv'))\n    model.add(MaxPooling2D(pool_size=(2, 2), name='b1_poll'))\n    model.add(Conv2D(128, kernel_size=(6, 6), activation='relu', padding='same', name='b2_conv'))\n    model.add(MaxPooling2D(pool_size=(2, 2), name='b2_pool'))\n    model.add(Conv2D(256, kernel_size=(6, 6), activation='relu', padding='same', name='b3_conv'))\n    model.add(MaxPooling2D(pool_size=(2, 2), name='b3_pool'))\n    model.add(Flatten())\n    model.add(Dense(500, activation='relu', name='fc1'))\n    model.add(Dropout(0.5))\n    model.add(Dense(500, activation='relu', name='fc2'))\n    model.add(Dropout(0.5))\n    model.add(Dense(n_targets, activation='softmax', name='prediction'))\n    model.compile(optimizer=optim, loss='categorical_crossentropy',  metrics=['accuracy'])\n</code></pre>\n\n<p>Given that, I reduced the images size to 30x30 (which resulted in an accuracy drop, as expected). However, running grid search in this model Resource exhausted. </p>\n\n<pre><code>model = KerasClassifier(build_fn=create_model, verbose=0)\n\n# grid initial weight, batch size and optimizer\nsgd  = optimizers.SGD(lr=0.0005)\nrms  = optimizers.RMSprop(lr=0.0005)\nadag = optimizers.Adagrad(lr=0.0005)\nadad = optimizers.Adadelta(lr=0.0005)\nadam = optimizers.Adam(lr=0.0005)\nadamm = optimizers.Adamax(lr=0.0005)\nnadam = optimizers.Nadam(lr=0.0005)\n\noptimizers = [sgd, rms, adag, adad, adam, adamm, nadam]\ninit = ['glorot_uniform', 'normal', 'uniform', 'he_normal']\nbatches = [32, 64, 128]\nparam_grid = dict(optim=optimizers, batch_size=batches, init=init)\ngrid = GridSearchCV(estimator=model, param_grid=param_grid)\ngrid_result = grid.fit(X_train, y_train)\n\n# summarize results\nprint(\"Best: %f using %s\" % (grid_result.best_score_, grid_result.best_params_))\n</code></pre>\n\n<p>I wonder if it's possible to \"clean\" things before each combination used by the grid search (not sure if I made myself clear, this is all new to me).</p>\n",
  "link" : "https://stackoverflow.com/questions/44826458/gridsearch-in-keras-tensorflow-resulting-in-resource-exhausted",
  "owner" : {
    "user_id" : 2666270,
    "user_type" : "registered",
    "display_name" : "pceccon",
    "profile_image" : "https://www.gravatar.com/avatar/8b08ff3f628c4d11f81fe113c6eda6b9?s=128&d=identicon&r=PG",
    "link" : "https://stackoverflow.com/users/2666270/pceccon",
    "reputation" : 1841,
    "accept_rate" : 90
  },
  "is_answered" : false,
  "creation_date" : 1498742798,
  "last_activity_date" : 1498743794,
  "tags" : [
    "memory-management",
    "out-of-memory",
    "gpu",
    "keras",
    "tensorflow-gpu"
  ],
  "score" : 0,
  "view_count" : 6,
  "answer_count" : 1
}