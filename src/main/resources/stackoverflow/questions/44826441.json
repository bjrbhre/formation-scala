{
  "question_id" : 44826441,
  "title" : "Getting assembly version info from static class throws a stackoverflow exception",
  "body" : "<p>I have struggled with this for a bit, and I have a feeling I am very close. In a .NET MVC web application I have used to have assemblyinfo information displayed in the front end without issue. In a bit of optimization I wanted to move that code out to a general purpose helper class.\nFor ease of use I have made it a static class, but I have hit several snags in the process. But now it throws a System.StackOverflowException when I try to use it, sadly. Here is the code:</p>\n\n<pre><code>public static class VersionInformationHelper\n{\n    public static string GetVersionNumber\n    {\n        get\n        {\n            if (!string.IsNullOrWhiteSpace(GetVersionNumber.GetType().Assembly.GetName().Version.ToString()))\n            {\n                return \"v\" + GetVersionNumber.GetType().Assembly.GetName().Version.ToString();\n            }\n            else\n            {\n                return string.Empty;\n            }\n        }\n    }\n\n    /// &lt;remark&gt;\n    /// This doesnt exactly return the commit hash so to speak. Well it does, but Teamcity is set to enter the corresponding commit hash information when building, \n    /// into productversion in \"AssemblyInfo.cs\". It could be any string really. But we assume that a commit hash will always be in that location.\n    /// It's \"Assembly informational version\" in the assemblyinfo patcher build feature in teamcity.\n    /// &lt;/remark&gt;\n    public static string GetCommitHash\n    {\n        get\n        {\n            if (!string.IsNullOrWhiteSpace(System.Diagnostics.FileVersionInfo.GetVersionInfo(GetVersionNumber.GetType().Assembly.Location).ProductVersion))\n            {\n                return System.Diagnostics.FileVersionInfo.GetVersionInfo(GetVersionNumber.GetType().Assembly.Location).ProductVersion;\n            }\n            else\n            {\n                return string.Empty;\n            }\n        }\n    }\n\n    public static string GetBuildDate\n    {\n        get\n        {\n            return string.Format(System.Globalization.CultureInfo.InvariantCulture, \"{0:dd/MM/yy HH:mm:ss}\", System.IO.File.GetLastWriteTime(GetVersionNumber.GetType().Assembly.Location));\n        }\n    }\n}\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>Fixed code based on feedback (GetVersionNumber and GetCommitHash\" has been changed):</p>\n\n<pre><code>public static class VersionInformationHelper\n{\n    public static string GetVersionNumber\n    {\n        get\n        {\n            if (!string.IsNullOrWhiteSpace(System.Reflection.Assembly.GetExecutingAssembly().GetName().Version.ToString()))\n            {\n                return \"v\" + System.Reflection.Assembly.GetExecutingAssembly().GetName().Version.ToString();\n            }\n            else\n            {\n                return string.Empty;\n            }\n        }\n    }\n\n    /// &lt;remark&gt;\n    /// This doesnt exactly return the commit hash so to speak. Well it does, but Teamcity is set to enter the corresponding commit hash information when building, \n    /// into productversion in \"AssemblyInfo.cs\". It could be any string really. But we assume that a commit hash will always be in that location.\n    /// It's \"Assembly informational version\" in the assemblyinfo patcher build feature in teamcity.\n    /// &lt;/remark&gt;\n    public static string GetCommitHash\n    {\n        get\n        {\n            if (!string.IsNullOrWhiteSpace(System.Diagnostics.FileVersionInfo.GetVersionInfo(System.Reflection.Assembly.GetExecutingAssembly().Location).ProductVersion))\n            {\n                return System.Diagnostics.FileVersionInfo.GetVersionInfo(System.Reflection.Assembly.GetExecutingAssembly().Location).ProductVersion;\n            }\n            else\n            {\n                return string.Empty;\n            }\n        }\n    }\n\n    public static string GetBuildDate\n    {\n        get\n        {\n            return string.Format(System.Globalization.CultureInfo.InvariantCulture, \"{0:dd/MM/yy HH:mm:ss}\", System.IO.File.GetLastWriteTime(GetVersionNumber.GetType().Assembly.Location));\n        }\n    }\n}\n</code></pre>\n",
  "link" : "https://stackoverflow.com/questions/44826441/getting-assembly-version-info-from-static-class-throws-a-stackoverflow-exception",
  "owner" : {
    "user_id" : 1501132,
    "user_type" : "registered",
    "display_name" : "Frederik T",
    "profile_image" : "https://www.gravatar.com/avatar/3ecf481ab7272045649824dc7bc3175e?s=128&d=identicon&r=PG",
    "link" : "https://stackoverflow.com/users/1501132/frederik-t",
    "reputation" : 177,
    "accept_rate" : 80
  },
  "is_answered" : true,
  "creation_date" : 1498742763,
  "last_activity_date" : 1498743780,
  "tags" : [
    "c#",
    "asp.net-mvc"
  ],
  "score" : 0,
  "view_count" : 13,
  "answer_count" : 1
}