{
  "question_id" : 44825818,
  "title" : "Scala Reflect Case Class Apply Method Runtime",
  "body" : "<p>How do you reflect a case class's members at run time without an instance?</p>\n\n<p>For example if I have the following case class:</p>\n\n<pre><code>package com.abc\n\nobject Holder {\n  case class Hello(message:String,count:Int)\n}\n</code></pre>\n\n<p>I would of thought although I don't have an instance of Hello to reflect I could reflect the Companion Object apply method and inspect the arguments to know about what members it has?</p>\n\n<pre><code>val mirror = ru.runtimeMirror(getClass.getClassLoader)\nval module = mirror.staticModule(\"com.abc.Holder$Hello\")\nval instance = mirror.reflectModule(module).symbol.typeSignature.member(TermName(\"apply\")).asMethod.paramLists\ninstance.foreach(println)\n</code></pre>\n\n<p>However this returns \"none\" is not a method. So it doesn't have an apply method?</p>\n",
  "link" : "https://stackoverflow.com/questions/44825818/scala-reflect-case-class-apply-method-runtime",
  "owner" : {
    "user_id" : 3932859,
    "user_type" : "registered",
    "display_name" : "Adam Pitt",
    "profile_image" : "https://graph.facebook.com/690959536/picture?type=large",
    "link" : "https://stackoverflow.com/users/3932859/adam-pitt",
    "reputation" : 48,
    "accept_rate" : 70
  },
  "is_answered" : false,
  "creation_date" : 1498741095,
  "last_activity_date" : 1498743817,
  "tags" : [
    "scala",
    "reflection",
    "runtime"
  ],
  "score" : 0,
  "view_count" : 11,
  "answer_count" : 1
}