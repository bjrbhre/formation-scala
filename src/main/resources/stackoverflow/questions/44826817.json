{
  "question_id" : 44826817,
  "title" : "Node.JS - Wait for a function to finish before executing rest of code",
  "body" : "<p>I am not a professional with Node.JS and Javascript as a whole, so please forgive me if this is a stupid question.</p>\n\n<p>I am running a Node.JS server to accept socket connections for a website that I will be running, and part of what this script is meant to do is contact a database. I have a function that is designed to do this before starting the server. However, when I call the function it continues with the rest of the code anyway and does not wait for the function to finish. I have tried using callbacks but to no avail, and I have no clue how to use Promises. Can someone explain how I resolve this issue?</p>\n\n<p>Here is my code for reference:</p>\n\n<pre><code>function GetCompetitionInfo(competitionID,callback){\n    var competitionInfo = {\n        id:competitionID,\n        title:\"\",\n        topic:\"\",\n        difficulty:\"\",\n        description:\"\",\n        jackpot:0,\n        answer:0,\n        author:0\n    }\n    var testVariable;\n    sqlConnection_read.connect(function(err){\n       if(err) throw err;\n       console.log(\"Connected to TSDB, retrieving competition info...\");\n       var query = \"SELECT * FROM competitions WHERE PuzzleID=\"+competitionID+\";\";\n       sqlConnection_read.query(query,function(err,result){\n          if(err) {console.log(\"Uh oh spaghettiohs\");throw err;}\n          competitionInfo.title = result[0].Puzzle_Title;\n          competitionInfo.topic = result[0].Puzzle_Topic;\n          competitionInfo.difficulty = result[0].Puzzle_Difficulty;\n          competitionInfo.description=result[0].puzzle_description;\n          competitionInfo.answer=result[0].Puzzle_Answer;\n          competitionInfo.jackpot=result[0].Puzzle_Jackpot;\n          competitionInfo.author=result[0].Puzzle_Author;  \n          callback(competitionInfo);\n       });\n    });\n}\nGetCompetitionInfo(0,function(data){\n   competitionInfo=data;//This is a variable outside of the scope\n});\n//I want this to be executed afterwards\nvar competitionTitle = competitionInfo.title;\nvar competitionTopic = competitionInfo.topic;\nvar competitionDifficulty = competitionInfo.difficulty;\nvar competitionDescription = competitionInfo.description;\nvar competitionAnswer = competitionInfo.answer;\nvar jackPotTotal = competitionInfo.jackpot;\nvar competitionAuthor = competitionInfo.author;\n\nconsole.log(\"Title:\"+competitionTitle);\nconsole.log(\"Topic:\"+competitionTopic);\nconsole.log(\"Difficulty:\"+competitionDifficulty);\nconsole.log(\"Description:\"+competitionDescription);\nconsole.log(\"Answer:\"+competitionAnswer);\nconsole.log(\"Jackpot:\"+jackPotTotal);\nconsole.log(\"Author UID:\"+competitionAuthor);\n</code></pre>\n\n<p>But this seems to immediately execute before the GetCompetitionDetails function has finished. How do I make them execute one after the other?</p>\n",
  "link" : "https://stackoverflow.com/questions/44826817/node-js-wait-for-a-function-to-finish-before-executing-rest-of-code",
  "owner" : {
    "user_id" : 4443135,
    "user_type" : "registered",
    "display_name" : "British Chap Named Charles",
    "profile_image" : "https://www.gravatar.com/avatar/463e151e31de795e932b2b83bb80dac4?s=128&d=identicon&r=PG&f=1",
    "link" : "https://stackoverflow.com/users/4443135/british-chap-named-charles",
    "reputation" : 16,
    "accept_rate" : null
  },
  "is_answered" : false,
  "creation_date" : 1498743659,
  "last_activity_date" : 1498743914,
  "tags" : [
    "javascript",
    "node.js",
    "asynchronous"
  ],
  "score" : 0,
  "view_count" : 14,
  "answer_count" : 1
}